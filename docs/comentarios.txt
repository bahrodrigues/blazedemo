Aprendemos usar selenium em algumas abordagens:
- gravação e execução com selenium IDE
- adaptar a gravação com selenium WebDriver
- criar nossos próprios scripts simples por programação

Em um projeto simples cada teste é um arquivo

Agora vamos aprender abordagens úteis em projetos com vida útil maior:

Projeto utilizando a abordagem BDD (Behaviour Driven Development) - Desenvolvimento Direcionado por Comportamento
--> O foco é melhorar a comunicação do time
--> Usar um plugin/framework chamado Cucumber
--> Seguir a sintaxe Gherkin (picles de pepino)

Um teste será composto por 2 arquivos:
- um arquivo de negócio, escrito em Gherkin (.feature)
- um arquivo de automação, que faz referência ao .feature (.java)


Projeto utilizando a abordagem Page Objects/Page Factory

- Pode usar ou não BDD
--> Foco na manutenção e reaproveitamento de longo prazo
--> Util para projetos com Ciclo de Vida Desenvolvimento de Software longos (SLDC)

Um teste vão ser vários arquivos
- um arquivo de mapeamento para cada página ou região da página (*Page.java)
- pode ter um arquivo de negócio, escrito em Gherkin (.feature)
- um arquivo de automação, que faz referência ao .feature (.java) e ao mapeamento

por projeto:
- um arquivo de hooks (Before e After centralizados)
- um arquivo runner (executa)

Sobre drivers do navegador
- um driver é um controlador que fica entre o selenium e o browser
- existem pelo menos 9 formas diferentes de organizar e configurar o driver
A principai:
- usar a biblioteca WebDriverManager (atualiazação automatica)
- baixar o driver manualmente para dentro do projeto
- baixar o driver manualmente para uma pasta comum do computador
 -atualiza o driver em uma pasta, atualizou para todos os projetos 
- 